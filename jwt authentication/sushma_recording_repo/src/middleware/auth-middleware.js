const jwt = require("jsonwebtoken");
const { SECRET_KEY } = require("../config");
const checkIfToBeSkipped = require("../utils/skip-urls.util");

module.exports = function (req, res, next) {
  // req : headers, body
  // console.log(req.headers.authorization); // bearer token is here
  if (checkIfToBeSkipped(req)) {
    // token verification is not required
    next();
  } else {
    try {
      //server doesn't store token , it stores SECRET_KEY
      // for routes other than listed in utils, in postman pass the  extract token from req.header, compare is it same token generated by server
      const token = req.headers.authorization.split(" ")[1]; // [bearer,token] split by space, take only token
      const decoded = jwt.verify(token, SECRET_KEY); // valid token  SECRET_KEY is used for both generating and verifying the token
      console.log("DECODED TOKEN", decoded);      
      //data is here in token ,
      // we have concept of locals in express - to pass
      // create a local variable and store the data so that it can be used in other files
      // locals lifespan is only till current request
      //create local variable named listener listener name is got from token which is given as subject while creating
     // res.locals.listener = { name: decoded.subject }; // locals : local data
      //can use througout my application
     // console.log(res.locals.listener); //after res.locals.______  can give anything pass the same throughout your application....to all functions who have req, res
      next(); // forward the request to next task in sequence
    } catch (err) {
      // invalid token
      return res.status(401).send({ message: "UNAUTHORIZED_REQUEST" });
    }
  }
};
